# OrbitX Website - Environment Configuration Template
# Copy this file to .env and customize the values for your deployment

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# External port for accessing the website (default: 3330)
ORBITX_PORT=3330

# Node.js environment (production/development)
NODE_ENV=production

# Docker container name
CONTAINER_NAME=orbitx-website

# Docker Compose project name (affects stack naming in Portainer)
COMPOSE_PROJECT_NAME=orbitx

# Application version tag
VERSION=latest

# =============================================================================
# RESOURCE LIMITS
# =============================================================================

# CPU Limits (cores)
CPU_LIMIT=1.0
CPU_RESERVATION=0.5

# Memory Limits (use suffixes: M, G)
MEMORY_LIMIT=1G
MEMORY_RESERVATION=512M

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Enable/disable Watchtower auto-updates
WATCHTOWER_ENABLE=true

# Traefik integration (set to true if using Traefik reverse proxy)
TRAEFIK_ENABLE=false

# Custom domain (for Traefik routing)
DOMAIN=orbitx.yourdomain.com

# SSL/TLS configuration
SSL_ENABLED=false
CERT_RESOLVER=letsencrypt

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================

# For Portainer deployment:
# 1. Copy this file to .env in your project root
# 2. Customize the values above for your environment
# 3. In Portainer, add these variables in the "Environment variables" section
# 4. Deploy the stack using the docker-compose.yml file

# For high-traffic deployments:
# - Increase CPU_LIMIT to 2.0 or higher
# - Increase MEMORY_LIMIT to 2G or higher
# - Consider deploying multiple replicas

# For development:
# - Set NODE_ENV=development
# - Use different ORBITX_PORT to avoid conflicts
# - Reduce resource limits for local testing