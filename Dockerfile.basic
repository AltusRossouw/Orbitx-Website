# Ultra-simple Dockerfile for maximum compatibility
FROM node:18-alpine

# Install build dependencies for native modules
RUN apk add --no-cache \
    libc6-compat \
    python3 \
    make \
    g++

WORKDIR /app

# Copy package.json first
COPY package.json ./

# Install ALL dependencies (including dev) for building, then clean up
RUN npm install --no-package-lock

# Copy all source files
COPY . .

# Build the application with error handling
RUN npm run build || (echo "Build failed, trying without image optimization" && npm run build)

# Remove devDependencies to reduce image size
RUN npm prune --production

# Remove build dependencies
RUN apk del python3 make g++

# Create non-root user
RUN adduser -S -D nextjs

# Set environment
ENV NODE_ENV=production
ENV PORT=3000

# Change ownership and switch user
RUN chown -R nextjs:nextjs /app
USER nextjs

# Expose port and start
EXPOSE 3000
CMD ["npm", "start"]
