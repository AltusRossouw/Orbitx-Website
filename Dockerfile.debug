# Debug Dockerfile to identify build issues
FROM node:18-alpine

# Install dependencies and debugging tools
RUN apk add --no-cache libc6-compat curl

WORKDIR /app

# Copy package.json
COPY package.json ./

# Show Node.js and npm versions for debugging
RUN echo "Node version: $(node --version)" && \
    echo "NPM version: $(npm --version)"

# Install dependencies with verbose logging
RUN npm install --no-package-lock --verbose

# Copy source files
COPY . .

# Show directory structure for debugging
RUN ls -la && \
    echo "Package.json contents:" && \
    cat package.json

# Try building with verbose output
RUN npm run build --verbose || (echo "BUILD FAILED - Showing more details:" && \
    echo "Node modules:" && ls node_modules | head -20 && \
    echo "Source files:" && ls -la src/ && \
    exit 1)

# Clean up
RUN npm prune --production

# Create user
RUN adduser -S -D nextjs && chown -R nextjs:nextjs /app
USER nextjs

EXPOSE 3000
CMD ["npm", "start"]
